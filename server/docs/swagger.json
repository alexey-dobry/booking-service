{
    "swagger": "2.0",
    "info": {
        "description": "This project works with PostgresSQL. It has functionality to create users and bookings. One user can have multiple bookings.",
        "title": "RESTful API test project for MireaCyberZone",
        "contact": {}
    },
    "basePath": "/api",
    "paths": {
        "/booking": {
            "post": {
                "description": "Creates function which adds new user data to database",
                "consumes": [
                    "application/json"
                ],
                "summary": "Adds new booking entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "integer \u003e= 1",
                        "name": "UserId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "format = YYYY-MM-DD HH:MM:SS",
                        "name": "StartTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "format = YYYY-MM-DD HH:MM:SS",
                        "name": "EndTime",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Wrong ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Error scanning data from db response",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/booking/{id}": {
            "get": {
                "description": "Creates function which retrieves data of booking specified by id from database",
                "consumes": [
                    "application/json"
                ],
                "summary": "Get booking data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "500": {
                        "description": "Error scanning data from db response",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            },
            "put": {
                "description": "Creates function which updates data of booking specified by id in database",
                "consumes": [
                    "application/json"
                ],
                "summary": "Updates booking data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Wrong Id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Error scanning data from db response",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            },
            "delete": {
                "description": "Creates function which deletes data of booking specified by id from database",
                "consumes": [
                    "application/json"
                ],
                "summary": "Delete specified booking data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Wrong Id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/bookings": {
            "get": {
                "description": "Creates function which retrieves data of all bookings from database",
                "consumes": [
                    "application/json"
                ],
                "summary": "Get booking data",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Booking"
                            }
                        }
                    },
                    "500": {
                        "description": "Error scanning data from db response",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Creates functon which adds new user data to database",
                "consumes": [
                    "application/json"
                ],
                "summary": "Add new user to database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "6 \u003c= length \u003c= 20",
                        "name": "Username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "length = 14",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "format = YYYY-MM-DD HH:MM:SS",
                        "name": "CreatedAt",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "format = YYYY-MM-DD HH:MM:SS",
                        "name": "UpdatedAt",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Wrong ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Error scanning data from db response",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Creates function which retrieves data of user specified by id from database",
                "consumes": [
                    "application/json"
                ],
                "summary": "Get user data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID ",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Wrong ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Error scanning data from db response",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            },
            "put": {
                "description": "Creates function which updates data of user specified by id in database",
                "consumes": [
                    "application/json"
                ],
                "summary": "Update user data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Wrong ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Error scanning data from db response",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            },
            "delete": {
                "description": "Creates function which deletes data of user specified by id from database",
                "consumes": [
                    "application/json"
                ],
                "summary": "Delete specified user data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Wrong Id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Booking": {
            "description": "Booking is a struct which contains Id, UserId, StartTime and EndTime",
            "type": "object",
            "required": [
                "end_time",
                "id",
                "start_time",
                "user_id"
            ],
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "description": "User is a struct which contains Id, Username, Password, CreatedAt and UpdatedAt",
            "type": "object",
            "required": [
                "created_at",
                "id",
                "password",
                "updated_at",
                "username"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 6
                }
            }
        }
    }
}